version: '2.4'

# Ideally, this replication mode should not be deployed on the same physical machine
# let's allow this for development and for proof of concept.
# Reference: https://hub.docker.com/_/zookeeper, 
# https://zookeeper.apache.org/doc/current/zookeeperStarted.html#sc_RunningReplicatedZooKeeper
services:
  zoo1:
    extends: 
      file: common.yml
      service: zk
    hostname: zoo1
    ports:
     - "2181:2181"
     - "8080:8080"
    environment:
      ZOO_MY_ID: 1

  zoo2:
    extends: 
      file: common.yml
      service: zk
    hostname: zoo2
    ports:
     - "2182:2181"
     - "8081:8080"
    environment:
      ZOO_MY_ID: 2

  zoo3:
    extends: 
      file: common.yml
      service: zk
    hostname: zoo3
    ports:
     - "2183:2181"
     - "8082:8080"
    environment:
      ZOO_MY_ID: 3

  kafka:
    image: kafka/base
    build: ./kafka

  broker:
    image: kafka/broker
    build:
      context: ./kafka
      dockerfile: Dockerfile.broker
    scale: 3
    restart: on-failure
    volumes:
      - /var/log/kafka
      - /etc/kafka
      - ./kafka/docker-entrypoint.sh:/opt/kafka/bin/docker-entrypoint.sh
    ports:
      - 9092-9094:${KAFKA_PORT:-9092}
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zoo1:2181,zoo2:2181,zoo3:2181
      - JMX_PORT=9999
    depends_on:
      - kafka
      - zoo1
      - zoo2
      - zoo3

  kafka-manager:
    image: hlebalbau/kafka-manager
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zoo1:2181,zoo2:2181,zoo3:2181"
      APPLICATION_SECRET: "random-secret"
      KAFKA_MANAGER_AUTH_ENABLED: "true"
      KAFKA_MANAGER_USERNAME: "admin"
      KAFKA_MANAGER_PASSWORD: "admin"
    command: -Dpidfile.path=/dev/null

  producer:
    image: instigator/producer
    container_name: instigator_producer
    restart: on-failure
    build:
      context: ./producer
      dockerfile: Dockerfile
    volumes:
      - ./producer:/app
    ports: 
      - "5000:5000"
    depends_on:
      - broker

  consumer:
    image: instigator/consumer
    container_name: instigator_consumer
    restart: on-failure
    build:
      context: ./consumer
      dockerfile: Dockerfile
    volumes:
      - ./consumer:/app
    ports: 
      - "5001:5001"
    depends_on:
      - broker
      - producer

  burrow:
    build:
      context: ./burrow
      dockerfile: Dockerfile
    container_name: instigator_burrow
    restart: always
    volumes:
      - ./burrow/start.sh:/etc/burrow/start.sh
      - ./burrow/burrow-config:/etc/burrow/
      - ./burrow/log/status/:/etc/log/
      - ./burrow/log/run/burrow.log:/etc/run/burrow.log
    ports:
      - 8000:8000
    environment: 
      KAFKA_BROKERS: '"broker1:9092", "broker2:9092", "broker3:9092"'
      ZOOKEEPER_SERVERS: '"zoo1:2181", "zoo2:2181", "zoo3:2181"'
      ZOOKEEPER_PATH: '"/conf"'
    depends_on:
      - zoo1
      - zoo2
      - zoo3
      - broker
